#!/bin/bash
#
# Build an Arch Linux WSL tar image

set -eu

# Generate a Windows Terminal profile
# https://learn.microsoft.com/windows/wsl/build-custom-distro#generate-a-windows-terminal-profile
pushd terminal-profile || exit 1
npm install
node index.js >../root/usr/lib/wsl/terminal-profile.json
popd || exit 1

# Create an Arch Linux image based on its latest base Docker image
[[ -f .env ]] && source .env

token=$(curl \
  -d "{ \"username\": \"${DOCKER_HUB_USERNAME}\", \"password\": \"${DOCKER_HUB_PAT}\" }" \
  -H "Content-Type: application/json" \
  -Ss \
  https://hub.docker.com/v2/users/login/ |
  jq -r .token)

digest=$(curl \
  -H "Authorization: Bearer ${token}" \
  -Ss \
  https://hub.docker.com/v2/namespaces/library/repositories/archlinux/tags/base |
  jq -r .digest)

tag=$(curl \
  -H "Authorization: Bearer ${token}" \
  -Ss \
  https://hub.docker.com/v2/namespaces/library/repositories/archlinux/tags/?page=1\&page_size=100 |
  jq -r ".results[] | select(.digest == \"${digest}\") | .name" |
  grep "^base-.*$")
echo "${tag}" >imagetag.txt

dockerfile=$(cat Dockerfile)
dockerfile="${dockerfile/FROM archlinux:base/FROM archlinux:${tag}}"
docker buildx build -t "archwsl:${tag}" -f - . <<<"${dockerfile}"

# Export the tar from the container
# https://learn.microsoft.com/windows/wsl/use-custom-distro#export-the-tar-from-a-container
docker run -t --name wsl_export "archwsl:${tag}" ls /
docker export wsl_export >archlinux.tar
docker rm wsl_export
docker rmi "archwsl:${tag}"

# Apply configuration file recommendations
# https://learn.microsoft.com/windows/wsl/build-custom-distro#configuration-file-recommendations
tar --delete -f archlinux.tar etc/resolv.conf

# Create the tar file
# https://learn.microsoft.com/windows/wsl/build-custom-distro#create-the-tar-file
gzip --best --force archlinux.tar
mv archlinux.tar.gz archlinux.wsl
